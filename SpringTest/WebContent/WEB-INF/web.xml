<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" version="2.4">

    <display-name>Spring BlazeDS Integration Samples</display-name>
    
 	<context-param>
	    <param-name>log4jConfigLocation</param-name>
	    <param-value>/log4j.properties</param-value>
	</context-param>
    
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/spring/security-context.xml
			/WEB-INF/spring/module-context.xml
			/WEB-INF/spring/flex-context.xml
		</param-value>
	</context-param>
	
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
      <filter-name>springSecurityFilterChain</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping>
	
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	
	<!-- 
	When the listener handles the contextInitialized event, it initializes the beans
	declared under <context-param> 
	 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!--
        The HttpSessionEventPublisher will publish
        HttpSessionCreatedEvent and HttpSessionDestroyedEvent
        to the WebApplicationContext
     -->
    <listener>
        <listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>
    </listener>
	
	<!-- 
	By the time spring initializes DispatcherServlet, all beans declared under <context-param>
	are ready for reference.
	 -->
	<servlet>
		<servlet-name>community</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 
		default location and name hardwired in the code is /WEB-INF/community-servlet.xml
		please be explicit, and declare your application config here. 
		-->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/community-servlet.xml</param-value>
		</init-param>		
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
    	<servlet-name>community</servlet-name>
    	<url-pattern>/community/*</url-pattern>
 	</servlet-mapping>

	<!-- 
     <welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
	 -->

</web-app>